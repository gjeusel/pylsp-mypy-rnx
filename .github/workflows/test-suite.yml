---
name: Test Suite

on:
  push:
  pull_request:
    types: [opened, synchronize]

jobs:
  tests:
    name: "Python ${{ matrix.python-version }}"
    runs-on: "ubuntu-latest"

    strategy:
      fail-fast: false
      matrix:
        os: ['ubuntu-latest', ]
        python-version: ["3.8", "3.9", "3.10.0-beta.2"]

    steps:
      - name: "Checkout Code"
        uses: actions/checkout@v2

      - name: "setup python"
        uses: actions/setup-python@v2
        with:
          python-version: "${{ matrix.python-version }}"
      - name: 'Install Poetry'
        uses: snok/install-poetry@v1.1.6
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: "Load cached venv if exists"
        id: cached-poetry-dependencies
        uses: actions/cache@v2
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}

      - name: "Install dependencies if cache does not exist"
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root

      - name: "Install pylsp_mypy_rnx"
        run: poetry install --no-interaction

      - name: "Run tests"
        run: |
          source .venv/bin/activate
          pytest tests/
          coverage report
